# Generated by Django 2.0.7 on 2018-07-30 20:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('credsite', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.TextField()),
                ('brief_description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'company',
            },
        ),
        migrations.CreateModel(
            name='CompanyComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Company')),
            ],
            options={
                'db_table': 'company_comment',
            },
        ),
        migrations.CreateModel(
            name='Qualification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'qualification',
            },
        ),
        migrations.CreateModel(
            name='QualificationSubtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'qualification_subtype',
            },
        ),
        migrations.CreateModel(
            name='QualificationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'qualification_type',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'source',
            },
        ),
        migrations.CreateModel(
            name='SourceComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Source')),
            ],
            options={
                'db_table': 'source_comment',
            },
        ),
        migrations.CreateModel(
            name='SourceMedia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'source_media',
            },
        ),
        migrations.CreateModel(
            name='SourceSubtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtype', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'source_subtype',
            },
        ),
        migrations.CreateModel(
            name='SourceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=70)),
            ],
            options={
                'db_table': 'source_type',
            },
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'statement',
            },
        ),
        migrations.CreateModel(
            name='StatementComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('statement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Statement')),
            ],
            options={
                'db_table': 'statement_comment',
            },
        ),
        migrations.CreateModel(
            name='StatementSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_backing', models.BooleanField()),
                ('replacement_text', models.CharField(max_length=1000)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Source')),
            ],
            options={
                'db_table': 'statement_source',
            },
        ),
        migrations.CreateModel(
            name='StatementSourceComments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('statement_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.StatementSource')),
            ],
            options={
                'db_table': 'statement_source_comments',
            },
        ),
        migrations.CreateModel(
            name='Subtopic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'subtopic',
            },
        ),
        migrations.CreateModel(
            name='SubtopicComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('subtopic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Subtopic')),
            ],
            options={
                'db_table': 'subtopic_comment',
            },
        ),
        migrations.CreateModel(
            name='SubtopicCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Company')),
                ('subtopic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Subtopic')),
            ],
            options={
                'db_table': 'subtopic_company',
            },
        ),
        migrations.CreateModel(
            name='SubtopicCompanyComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('subtopic_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.SubtopicCompany')),
            ],
            options={
                'db_table': 'subtopic_company_comment',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('description', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'topic',
            },
        ),
        migrations.CreateModel(
            name='TopicComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Topic')),
            ],
            options={
                'db_table': 'topic_comment',
            },
        ),
        migrations.CreateModel(
            name='TopicCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Company')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Topic')),
            ],
            options={
                'db_table': 'topic_company',
            },
        ),
        migrations.CreateModel(
            name='TopicCompanyComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('topic_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.TopicCompany')),
            ],
            options={
                'db_table': 'topic_company_comment',
            },
        ),
        migrations.CreateModel(
            name='UserAdditionalInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=70, null=True)),
                ('photo_link', models.CharField(max_length=70, null=True)),
                ('fb_username', models.CharField(max_length=70, null=True)),
                ('is_photo_id_verified', models.BooleanField()),
                ('bio', models.CharField(max_length=5000, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_additional',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.QualificationType')),
                ('voter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.UserAdditionalInfo')),
            ],
            options={
                'db_table': 'vote',
            },
        ),
        migrations.DeleteModel(
            name='Post',
        ),
        migrations.AddField(
            model_name='subtopic',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Topic'),
        ),
        migrations.AddField(
            model_name='statementsource',
            name='statement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.SubtopicCompany'),
        ),
        migrations.AddField(
            model_name='statement',
            name='subtopic_company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.SubtopicCompany'),
        ),
        migrations.AddField(
            model_name='source',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.SourceMedia'),
        ),
        migrations.AddField(
            model_name='source',
            name='subtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.SourceSubtype'),
        ),
        migrations.AddField(
            model_name='source',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.SourceType'),
        ),
        migrations.AddField(
            model_name='qualificationsubtype',
            name='qualification_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.QualificationType'),
        ),
        migrations.AddField(
            model_name='qualification',
            name='qualification_subtype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.QualificationSubtype'),
        ),
        migrations.AddField(
            model_name='qualification',
            name='qualification_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.QualificationType'),
        ),
        migrations.AddField(
            model_name='qualification',
            name='subtopic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Subtopic'),
        ),
        migrations.AddField(
            model_name='qualification',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.Topic'),
        ),
        migrations.AddField(
            model_name='qualification',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='credsite.UserAdditionalInfo'),
        ),
    ]
